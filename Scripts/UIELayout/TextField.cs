/*
This script is auto generated by UIELayoutCodeGenWindow

Copyright 2023 SUISUISHOU(blightue@gmail.com)

Licensed under the Apache License, Version 2.0 (the "License")
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

using UnityEngine.UIElements;
using SuiSuiShou.UIEEx;

namespace SuiSuiShou.UIEEx
{
    public static partial class UIELayout 
    {
///<summary>
///<para>
///Creates a new textfield.
///</para>
///</summary>
///<param name="parent">The parent of this element.</param>
        public static TextField TextField (VisualElement parent = null)
        {{
            TextField textField = new TextField();
            textField.SetParent(parent);
            return textField;
        }}

///<summary>
///<para>
///Creates a new textfield.
///</para>
///</summary>
///<param name="maxLength">The maximum number of characters this textfield can hold. If 0, there is no limit.</param>
///<param name="multiline">Set this to true to allow multiple lines in the textfield and false if otherwise.</param>
///<param name="isPasswordField">Set this to true to mask the characters and false if otherwise.</param>
///<param name="maskChar">The character used for masking in a password field.</param>
///<param name="parent">The parent of this element.</param>
        public static TextField TextField (System.Int32 maxLength, System.Boolean multiline, System.Boolean isPasswordField, System.Char maskChar, VisualElement parent = null)
        {{
            TextField textField = new TextField(maxLength, multiline, isPasswordField, maskChar);
            textField.SetParent(parent);
            return textField;
        }}

///<summary>
///<para>
///Creates a new textfield.
///</para>
///</summary>
///<param name="label"></param>
///<param name="parent">The parent of this element.</param>
        public static TextField TextField (System.String label, VisualElement parent = null)
        {{
            TextField textField = new TextField(label);
            textField.SetParent(parent);
            return textField;
        }}

///<summary>
///<para>
///Creates a new textfield.
///</para>
///</summary>
///<param name="maxLength">The maximum number of characters this textfield can hold. If 0, there is no limit.</param>
///<param name="multiline">Set this to true to allow multiple lines in the textfield and false if otherwise.</param>
///<param name="isPasswordField">Set this to true to mask the characters and false if otherwise.</param>
///<param name="maskChar">The character used for masking in a password field.</param>
///<param name="label"></param>
///<param name="parent">The parent of this element.</param>
        public static TextField TextField (System.String label, System.Int32 maxLength, System.Boolean multiline, System.Boolean isPasswordField, System.Char maskChar, VisualElement parent = null)
        {{
            TextField textField = new TextField(label, maxLength, multiline, isPasswordField, maskChar);
            textField.SetParent(parent);
            return textField;
        }}

    }
}