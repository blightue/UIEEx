{
  "api/SuiSuiShou.UIEEx.Editor.EditorUIELayout.html": {
    "href": "api/SuiSuiShou.UIEEx.Editor.EditorUIELayout.html",
    "title": "Class EditorUIELayout | UIEEx",
    "keywords": "Class EditorUIELayout Namespace SuiSuiShou.UIEEx.Editor Assembly SuiSuiShou.UIEEx.Editor.dll public static class EditorUIELayout Inheritance object EditorUIELayout Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods BoundsField(string, VisualElement) Initializes and returns an instance of BoundsField. public static BoundsField BoundsField(string label, VisualElement parent = null) Parameters label string The text to use as a label. parent VisualElement The parent of this element. Returns BoundsField BoundsField(VisualElement) Initializes and returns an instance of BoundsField. public static BoundsField BoundsField(VisualElement parent = null) Parameters parent VisualElement The parent of this element. Returns BoundsField BoundsIntField(string, VisualElement) Initializes and returns an instance of BoundsIntField. public static BoundsIntField BoundsIntField(string label, VisualElement parent = null) Parameters label string The text to use as a label. parent VisualElement The parent of this element. Returns BoundsIntField BoundsIntField(VisualElement) Initializes and returns an instance of BoundsIntField. public static BoundsIntField BoundsIntField(VisualElement parent = null) Parameters parent VisualElement The parent of this element. Returns BoundsIntField ColorField(string, VisualElement) Initializes and returns an instance of ColorField. public static ColorField ColorField(string label, VisualElement parent = null) Parameters label string The text to use as a label. parent VisualElement The parent of this element. Returns ColorField ColorField(VisualElement) Initializes and returns an instance of ColorField. public static ColorField ColorField(VisualElement parent = null) Parameters parent VisualElement The parent of this element. Returns ColorField CurveField(string, VisualElement) Initializes and returns an instance of CurveField. public static CurveField CurveField(string label, VisualElement parent = null) Parameters label string The text to use as a label. parent VisualElement The parent of this element. Returns CurveField CurveField(VisualElement) Initializes and returns an instance of CurveField. public static CurveField CurveField(VisualElement parent = null) Parameters parent VisualElement The parent of this element. Returns CurveField DoubleField(int, VisualElement) Constructor. public static DoubleField DoubleField(int maxLength, VisualElement parent = null) Parameters maxLength int Maximum number of characters the field can take. parent VisualElement The parent of this element. Returns DoubleField DoubleField(string, int, VisualElement) Constructor. public static DoubleField DoubleField(string label, int maxLength, VisualElement parent = null) Parameters label string maxLength int Maximum number of characters the field can take. parent VisualElement The parent of this element. Returns DoubleField DoubleField(VisualElement) Constructor. public static DoubleField DoubleField(VisualElement parent = null) Parameters parent VisualElement The parent of this element. Returns DoubleField EnumField(Enum, VisualElement) Construct an EnumField. public static EnumField EnumField(Enum defaultValue, VisualElement parent = null) Parameters defaultValue Enum Initial value. Also used to detect Enum type. parent VisualElement The parent of this element. Returns EnumField EnumField(string, Enum, VisualElement) Construct an EnumField. public static EnumField EnumField(string label, Enum defaultValue, VisualElement parent = null) Parameters label string defaultValue Enum Initial value. Also used to detect Enum type. parent VisualElement The parent of this element. Returns EnumField EnumField(VisualElement) Construct an EnumField. public static EnumField EnumField(VisualElement parent = null) Parameters parent VisualElement The parent of this element. Returns EnumField EnumFlagsField(Enum, bool, VisualElement) Constructs an EnumFlagsField with a default value, and initializes its underlying type. public static EnumFlagsField EnumFlagsField(Enum defaultValue, bool includeObsoleteValues, VisualElement parent = null) Parameters defaultValue Enum Initial value. This also detects the Enum type. includeObsoleteValues bool parent VisualElement The parent of this element. Returns EnumFlagsField EnumFlagsField(Enum, VisualElement) Constructs an EnumFlagsField with a default value, and initializes its underlying type. public static EnumFlagsField EnumFlagsField(Enum defaultValue, VisualElement parent = null) Parameters defaultValue Enum Initial value. This also detects the Enum type. parent VisualElement The parent of this element. Returns EnumFlagsField EnumFlagsField(string, Enum, bool, VisualElement) Constructs an EnumFlagsField with a default value, and initializes its underlying type. public static EnumFlagsField EnumFlagsField(string label, Enum defaultValue, bool includeObsoleteValues, VisualElement parent = null) Parameters label string defaultValue Enum Initial value. This also detects the Enum type. includeObsoleteValues bool parent VisualElement The parent of this element. Returns EnumFlagsField EnumFlagsField(string, Enum, VisualElement) Constructs an EnumFlagsField with a default value, and initializes its underlying type. public static EnumFlagsField EnumFlagsField(string label, Enum defaultValue, VisualElement parent = null) Parameters label string defaultValue Enum Initial value. This also detects the Enum type. parent VisualElement The parent of this element. Returns EnumFlagsField EnumFlagsField(string, VisualElement) Constructs an EnumFlagsField with a default value, and initializes its underlying type. public static EnumFlagsField EnumFlagsField(string label, VisualElement parent = null) Parameters label string parent VisualElement The parent of this element. Returns EnumFlagsField EnumFlagsField(VisualElement) Constructs an EnumFlagsField with a default value, and initializes its underlying type. public static EnumFlagsField EnumFlagsField(VisualElement parent = null) Parameters parent VisualElement The parent of this element. Returns EnumFlagsField FloatField(int, VisualElement) Constructor. public static FloatField FloatField(int maxLength, VisualElement parent = null) Parameters maxLength int Maximum number of characters the field can take. parent VisualElement The parent of this element. Returns FloatField FloatField(string, int, VisualElement) Constructor. public static FloatField FloatField(string label, int maxLength, VisualElement parent = null) Parameters label string maxLength int Maximum number of characters the field can take. parent VisualElement The parent of this element. Returns FloatField FloatField(VisualElement) Constructor. public static FloatField FloatField(VisualElement parent = null) Parameters parent VisualElement The parent of this element. Returns FloatField GradientField(string, VisualElement) Constructor. public static GradientField GradientField(string label, VisualElement parent = null) Parameters label string parent VisualElement The parent of this element. Returns GradientField GradientField(VisualElement) Constructor. public static GradientField GradientField(VisualElement parent = null) Parameters parent VisualElement The parent of this element. Returns GradientField Hash128Field(int, VisualElement) Initializes and returns an instance of Hash128Field. public static Hash128Field Hash128Field(int maxLength, VisualElement parent = null) Parameters maxLength int Maximum number of characters for the field. parent VisualElement The parent of this element. Returns Hash128Field Hash128Field(string, int, VisualElement) Initializes and returns an instance of Hash128Field. public static Hash128Field Hash128Field(string label, int maxLength, VisualElement parent = null) Parameters label string The text to use as a label. maxLength int Maximum number of characters for the field. parent VisualElement The parent of this element. Returns Hash128Field Hash128Field(VisualElement) Initializes and returns an instance of Hash128Field. public static Hash128Field Hash128Field(VisualElement parent = null) Parameters parent VisualElement The parent of this element. Returns Hash128Field InspectorElement(Editor, VisualElement) InspectorElement constructor. public static InspectorElement InspectorElement(Editor editor, VisualElement parent = null) Parameters editor Editor parent VisualElement The parent of this element. Returns InspectorElement InspectorElement(SerializedObject, VisualElement) InspectorElement constructor. public static InspectorElement InspectorElement(SerializedObject obj, VisualElement parent = null) Parameters obj SerializedObject Create a SerializedObject from given obj and automatically Bind() to it. parent VisualElement The parent of this element. Returns InspectorElement InspectorElement(Object, VisualElement) InspectorElement constructor. public static InspectorElement InspectorElement(Object obj, VisualElement parent = null) Parameters obj Object Create a SerializedObject from given obj and automatically Bind() to it. parent VisualElement The parent of this element. Returns InspectorElement InspectorElement(VisualElement) InspectorElement constructor. public static InspectorElement InspectorElement(VisualElement parent = null) Parameters parent VisualElement The parent of this element. Returns InspectorElement IntegerField(int, VisualElement) Constructor. public static IntegerField IntegerField(int maxLength, VisualElement parent = null) Parameters maxLength int Maximum number of characters the field can take. parent VisualElement The parent of this element. Returns IntegerField IntegerField(string, int, VisualElement) Constructor. public static IntegerField IntegerField(string label, int maxLength, VisualElement parent = null) Parameters label string maxLength int Maximum number of characters the field can take. parent VisualElement The parent of this element. Returns IntegerField IntegerField(VisualElement) Constructor. public static IntegerField IntegerField(VisualElement parent = null) Parameters parent VisualElement The parent of this element. Returns IntegerField LayerField(int, VisualElement) Initializes and returns an instance of LayerField. public static LayerField LayerField(int defaultValue, VisualElement parent = null) Parameters defaultValue int The initial layer value this field should use. parent VisualElement The parent of this element. Returns LayerField LayerField(string, int, VisualElement) Initializes and returns an instance of LayerField. public static LayerField LayerField(string label, int defaultValue, VisualElement parent = null) Parameters label string The text to use as a label for the field. defaultValue int The initial layer value this field should use. parent VisualElement The parent of this element. Returns LayerField LayerField(string, VisualElement) Initializes and returns an instance of LayerField. public static LayerField LayerField(string label, VisualElement parent = null) Parameters label string The text to use as a label for the field. parent VisualElement The parent of this element. Returns LayerField LayerField(VisualElement) Initializes and returns an instance of LayerField. public static LayerField LayerField(VisualElement parent = null) Parameters parent VisualElement The parent of this element. Returns LayerField LayerMaskField(int, VisualElement) Constructor of the field. public static LayerMaskField LayerMaskField(int defaultMask, VisualElement parent = null) Parameters defaultMask int The mask to use for a first selection. parent VisualElement The parent of this element. Returns LayerMaskField LayerMaskField(string, int, VisualElement) Constructor of the field. public static LayerMaskField LayerMaskField(string label, int defaultMask, VisualElement parent = null) Parameters label string The label to prefix the <see cref=\"LayerMaskField\" />. defaultMask int The mask to use for a first selection. parent VisualElement The parent of this element. Returns LayerMaskField LayerMaskField(string, VisualElement) Constructor of the field. public static LayerMaskField LayerMaskField(string label, VisualElement parent = null) Parameters label string The label to prefix the <see cref=\"LayerMaskField\" />. parent VisualElement The parent of this element. Returns LayerMaskField LayerMaskField(VisualElement) Constructor of the field. public static LayerMaskField LayerMaskField(VisualElement parent = null) Parameters parent VisualElement The parent of this element. Returns LayerMaskField LongField(int, VisualElement) Constructor. public static LongField LongField(int maxLength, VisualElement parent = null) Parameters maxLength int Maximum number of characters the field can take. parent VisualElement The parent of this element. Returns LongField LongField(string, int, VisualElement) Constructor. public static LongField LongField(string label, int maxLength, VisualElement parent = null) Parameters label string maxLength int Maximum number of characters the field can take. parent VisualElement The parent of this element. Returns LongField LongField(VisualElement) Constructor. public static LongField LongField(VisualElement parent = null) Parameters parent VisualElement The parent of this element. Returns LongField MaskField(List<string>, int, Func<string, string>, Func<string, string>, VisualElement) Initializes and returns an instance of MaskField. public static MaskField MaskField(List<string> choices, int defaultMask, Func<string, string> formatSelectedValueCallback, Func<string, string> formatListItemCallback, VisualElement parent = null) Parameters choices List<string> A list of choices to populate the field. defaultMask int formatSelectedValueCallback Func<string, string> A callback to format the selected value. Unity calls this method automatically when a new value is selected in the field.. formatListItemCallback Func<string, string> The initial mask value this field should use. Unity calls this method automatically when displaying choices for the field. parent VisualElement The parent of this element. Returns MaskField MaskField(string, List<string>, int, Func<string, string>, Func<string, string>, VisualElement) Initializes and returns an instance of MaskField. public static MaskField MaskField(string label, List<string> choices, int defaultMask, Func<string, string> formatSelectedValueCallback, Func<string, string> formatListItemCallback, VisualElement parent = null) Parameters label string The text to use as a label for the field. choices List<string> A list of choices to populate the field. defaultMask int formatSelectedValueCallback Func<string, string> A callback to format the selected value. Unity calls this method automatically when a new value is selected in the field.. formatListItemCallback Func<string, string> The initial mask value this field should use. Unity calls this method automatically when displaying choices for the field. parent VisualElement The parent of this element. Returns MaskField MaskField(string, VisualElement) Initializes and returns an instance of MaskField. public static MaskField MaskField(string label, VisualElement parent = null) Parameters label string The text to use as a label for the field. parent VisualElement The parent of this element. Returns MaskField MaskField(VisualElement) Initializes and returns an instance of MaskField. public static MaskField MaskField(VisualElement parent = null) Parameters parent VisualElement The parent of this element. Returns MaskField ObjectField(string, Type, bool, VisualElement) Constructor. public static ObjectField ObjectField(string label, Type objectType, bool allowSceneObjects, VisualElement parent = null) Parameters label string The label of this field objectType Type The object type of the binding content allowSceneObjects bool Allows scene objects to be assigned to the field parent VisualElement The parent of this element. Returns ObjectField ObjectField(string, Type, VisualElement) Constructor. public static ObjectField ObjectField(string label, Type objType, VisualElement parent = null) Parameters label string The label of this field objType Type The object type of the binding content parent VisualElement The parent of this element. Returns ObjectField ObjectField(string, VisualElement) Constructor. public static ObjectField ObjectField(string label, VisualElement parent = null) Parameters label string parent VisualElement The parent of this element. Returns ObjectField ObjectField(VisualElement) Constructor. public static ObjectField ObjectField(VisualElement parent = null) Parameters parent VisualElement The parent of this element. Returns ObjectField PropertyField(SerializedProperty, string, VisualElement) PropertyField constructor. public static PropertyField PropertyField(SerializedProperty property, string label, VisualElement parent = null) Parameters property SerializedProperty Providing a SerializedProperty in the construct just sets the bindingPath. You will still have to call Bind() on the PropertyField afterwards. label string Optionally overwrite the property label. parent VisualElement The parent of this element. Returns PropertyField PropertyField(SerializedProperty, VisualElement) PropertyField constructor. public static PropertyField PropertyField(SerializedProperty property, VisualElement parent = null) Parameters property SerializedProperty Providing a SerializedProperty in the construct just sets the bindingPath. You will still have to call Bind() on the PropertyField afterwards. parent VisualElement The parent of this element. Returns PropertyField PropertyField(VisualElement) PropertyField constructor. public static PropertyField PropertyField(VisualElement parent = null) Parameters parent VisualElement The parent of this element. Returns PropertyField RectField(string, VisualElement) Initializes and returns an instance of RectField. public static RectField RectField(string label, VisualElement parent = null) Parameters label string The text to use as a label. parent VisualElement The parent of this element. Returns RectField RectField(VisualElement) Initializes and returns an instance of RectField. public static RectField RectField(VisualElement parent = null) Parameters parent VisualElement The parent of this element. Returns RectField RectIntField(string, VisualElement) Initializes and returns an instance of RectIntField. public static RectIntField RectIntField(string label, VisualElement parent = null) Parameters label string The text to use as a label. parent VisualElement The parent of this element. Returns RectIntField RectIntField(VisualElement) Initializes and returns an instance of RectIntField. public static RectIntField RectIntField(VisualElement parent = null) Parameters parent VisualElement The parent of this element. Returns RectIntField TagField(string, string, VisualElement) Initializes and returns an instance of CurveField. public static TagField TagField(string label, string defaultValue, VisualElement parent = null) Parameters label string The text to use as a label for the field. defaultValue string The initial tag value this field should use. parent VisualElement The parent of this element. Returns TagField TagField(VisualElement) Initializes and returns an instance of CurveField. public static TagField TagField(VisualElement parent = null) Parameters parent VisualElement The parent of this element. Returns TagField Toolbar(VisualElement) Constructor. public static Toolbar Toolbar(VisualElement parent = null) Parameters parent VisualElement The parent of this element. Returns Toolbar ToolbarBreadcrumbs(VisualElement) Constructs a breadcrumb UI element for the toolbar to help users navigate a hierarchy. public static ToolbarBreadcrumbs ToolbarBreadcrumbs(VisualElement parent = null) Parameters parent VisualElement The parent of this element. Returns ToolbarBreadcrumbs ToolbarButton(Action, VisualElement) Constructor. public static ToolbarButton ToolbarButton(Action clickEvent, VisualElement parent = null) Parameters clickEvent Action The action to be called when the button is pressed. parent VisualElement The parent of this element. Returns ToolbarButton ToolbarButton(VisualElement) Constructor. public static ToolbarButton ToolbarButton(VisualElement parent = null) Parameters parent VisualElement The parent of this element. Returns ToolbarButton ToolbarMenu(VisualElement) Constructor. public static ToolbarMenu ToolbarMenu(VisualElement parent = null) Parameters parent VisualElement The parent of this element. Returns ToolbarMenu ToolbarPopupSearchField(VisualElement) Constructor. public static ToolbarPopupSearchField ToolbarPopupSearchField(VisualElement parent = null) Parameters parent VisualElement The parent of this element. Returns ToolbarPopupSearchField ToolbarSearchField(VisualElement) Constructor. public static ToolbarSearchField ToolbarSearchField(VisualElement parent = null) Parameters parent VisualElement The parent of this element. Returns ToolbarSearchField ToolbarSpacer(VisualElement) Constructor. public static ToolbarSpacer ToolbarSpacer(VisualElement parent = null) Parameters parent VisualElement The parent of this element. Returns ToolbarSpacer ToolbarToggle(VisualElement) Constructor. public static ToolbarToggle ToolbarToggle(VisualElement parent = null) Parameters parent VisualElement The parent of this element. Returns ToolbarToggle Vector2Field(string, VisualElement) Initializes and returns an instance of Vector2Field. public static Vector2Field Vector2Field(string label, VisualElement parent = null) Parameters label string The text to use as a label. parent VisualElement The parent of this element. Returns Vector2Field Vector2Field(VisualElement) Initializes and returns an instance of Vector2Field. public static Vector2Field Vector2Field(VisualElement parent = null) Parameters parent VisualElement The parent of this element. Returns Vector2Field Vector2IntField(string, VisualElement) Initializes and returns an instance of Vector2IntField. public static Vector2IntField Vector2IntField(string label, VisualElement parent = null) Parameters label string The text to use as a label. parent VisualElement The parent of this element. Returns Vector2IntField Vector2IntField(VisualElement) Initializes and returns an instance of Vector2IntField. public static Vector2IntField Vector2IntField(VisualElement parent = null) Parameters parent VisualElement The parent of this element. Returns Vector2IntField Vector3Field(string, VisualElement) Initializes and returns an instance of Vector3Field. public static Vector3Field Vector3Field(string label, VisualElement parent = null) Parameters label string The text to use as a label. parent VisualElement The parent of this element. Returns Vector3Field Vector3Field(VisualElement) Initializes and returns an instance of Vector3Field. public static Vector3Field Vector3Field(VisualElement parent = null) Parameters parent VisualElement The parent of this element. Returns Vector3Field Vector3IntField(string, VisualElement) Initializes and returns an instance of Vector3IntField. public static Vector3IntField Vector3IntField(string label, VisualElement parent = null) Parameters label string The text to use as a label. parent VisualElement The parent of this element. Returns Vector3IntField Vector3IntField(VisualElement) Initializes and returns an instance of Vector3IntField. public static Vector3IntField Vector3IntField(VisualElement parent = null) Parameters parent VisualElement The parent of this element. Returns Vector3IntField Vector4Field(string, VisualElement) Initializes and returns an instance of Vector4Field. public static Vector4Field Vector4Field(string label, VisualElement parent = null) Parameters label string The text to use as a label. parent VisualElement The parent of this element. Returns Vector4Field Vector4Field(VisualElement) Initializes and returns an instance of Vector4Field. public static Vector4Field Vector4Field(VisualElement parent = null) Parameters parent VisualElement The parent of this element. Returns Vector4Field"
  },
  "api/SuiSuiShou.UIEEx.Editor.UIEExtension.html": {
    "href": "api/SuiSuiShou.UIEEx.Editor.UIEExtension.html",
    "title": "Class UIEExtension | UIEEx",
    "keywords": "Class UIEExtension Namespace SuiSuiShou.UIEEx.Editor Assembly SuiSuiShou.UIEEx.Editor.dll public static class UIEExtension Inheritance object UIEExtension Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods SetBindObject<T>(T, SerializedObject) Set the bind object of the target element public static T SetBindObject<T>(this T target, SerializedObject serializedObj) where T : BindableElement Parameters target T serializedObj SerializedObject Returns T Type Parameters T"
  },
  "api/SuiSuiShou.UIEEx.Editor.html": {
    "href": "api/SuiSuiShou.UIEEx.Editor.html",
    "title": "Namespace SuiSuiShou.UIEEx.Editor | UIEEx",
    "keywords": "Namespace SuiSuiShou.UIEEx.Editor Classes EditorUIELayout UIEExtension"
  },
  "api/SuiSuiShou.UIEEx.UIEExtension.html": {
    "href": "api/SuiSuiShou.UIEEx.UIEExtension.html",
    "title": "Class UIEExtension | UIEEx",
    "keywords": "Class UIEExtension Namespace SuiSuiShou.UIEEx Assembly SuiSuiShou.UIEEx.Runtime.dll UI Elements extension methods public static class UIEExtension Inheritance object UIEExtension Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods SetBindingPath<T>(T, string) Set the binding path of the target element public static T SetBindingPath<T>(this T target, string bindingPath) where T : IBindable Parameters target T bindingPath string Returns T Type Parameters T SetLabel<T>(BaseField<T>, string) Set the Label content of the target element, return BaseFieldT public static BaseField<T> SetLabel<T>(this BaseField<T> target, string label) Parameters target BaseField<T> label string Returns BaseField<T> Type Parameters T SetLabel<T, V>(T, string) Set the Label content of BaseFieldV element, return the target element public static T SetLabel<T, V>(this T target, string label) where T : BaseField<V> Parameters target T label string Returns T Type Parameters T V SetParent<T>(T, VisualElement) Set the parent of the target element public static T SetParent<T>(this T target, VisualElement parent) where T : VisualElement Parameters target T parent VisualElement Returns T Type Parameters T SetText<T>(T, string) Set the text of the target element public static T SetText<T>(this T target, string text) where T : TextElement Parameters target T text string Returns T Type Parameters T"
  },
  "api/SuiSuiShou.UIEEx.UIELayout.html": {
    "href": "api/SuiSuiShou.UIEEx.UIELayout.html",
    "title": "Class UIELayout | UIEEx",
    "keywords": "Class UIELayout Namespace SuiSuiShou.UIEEx Assembly SuiSuiShou.UIEEx.Runtime.dll public static class UIELayout Inheritance object UIELayout Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Box(VisualElement) Initializes and returns an instance of Box. public static Box Box(VisualElement parent = null) Parameters parent VisualElement The parent of this element. Returns Box Button(Action, VisualElement) Constructs a button with an Action that is triggered when the button is clicked. public static Button Button(Action clickEvent, VisualElement parent = null) Parameters clickEvent Action The action triggered when the button is clicked. parent VisualElement The parent of this element. Returns Button Button(string, Action, VisualElement) Constructs a button with an Action that is triggered when the button is clicked. public static Button Button(string text, Action clickEvent, VisualElement parent = null) Parameters text string The text of this button content clickEvent Action The action triggered when the button is clicked. parent VisualElement The parent of this element. Returns Button Button(string, VisualElement) Constructs a Button. public static Button Button(string text, VisualElement parent = null) Parameters text string The text of this button content parent VisualElement The parent of this element. Returns Button Button(VisualElement) Constructs a Button. public static Button Button(VisualElement parent = null) Parameters parent VisualElement The parent of this element. Returns Button DropdownField(List<string>, int, Func<string, string>, Func<string, string>, VisualElement) Construct a DropdownField. public static DropdownField DropdownField(List<string> choices, int defaultIndex, Func<string, string> formatSelectedValueCallback, Func<string, string> formatListItemCallback, VisualElement parent = null) Parameters choices List<string> defaultIndex int formatSelectedValueCallback Func<string, string> formatListItemCallback Func<string, string> parent VisualElement The parent of this element. Returns DropdownField DropdownField(List<string>, string, Func<string, string>, Func<string, string>, VisualElement) Construct a DropdownField. public static DropdownField DropdownField(List<string> choices, string defaultValue, Func<string, string> formatSelectedValueCallback, Func<string, string> formatListItemCallback, VisualElement parent = null) Parameters choices List<string> defaultValue string formatSelectedValueCallback Func<string, string> formatListItemCallback Func<string, string> parent VisualElement The parent of this element. Returns DropdownField DropdownField(string, List<string>, int, Func<string, string>, Func<string, string>, VisualElement) Construct a DropdownField. public static DropdownField DropdownField(string label, List<string> choices, int defaultIndex, Func<string, string> formatSelectedValueCallback, Func<string, string> formatListItemCallback, VisualElement parent = null) Parameters label string choices List<string> defaultIndex int formatSelectedValueCallback Func<string, string> formatListItemCallback Func<string, string> parent VisualElement The parent of this element. Returns DropdownField DropdownField(string, List<string>, string, Func<string, string>, Func<string, string>, VisualElement) Construct a DropdownField. public static DropdownField DropdownField(string label, List<string> choices, string defaultValue, Func<string, string> formatSelectedValueCallback, Func<string, string> formatListItemCallback, VisualElement parent = null) Parameters label string choices List<string> defaultValue string formatSelectedValueCallback Func<string, string> formatListItemCallback Func<string, string> parent VisualElement The parent of this element. Returns DropdownField DropdownField(string, VisualElement) Construct a DropdownField. public static DropdownField DropdownField(string label, VisualElement parent = null) Parameters label string parent VisualElement The parent of this element. Returns DropdownField DropdownField(VisualElement) Construct a DropdownField. public static DropdownField DropdownField(VisualElement parent = null) Parameters parent VisualElement The parent of this element. Returns DropdownField Foldout(VisualElement) Constructs a Foldout element. public static Foldout Foldout(VisualElement parent = null) Parameters parent VisualElement The parent of this element. Returns Foldout GroupBox(string, VisualElement) Creates a GroupBox with a title. public static GroupBox GroupBox(string text, VisualElement parent = null) Parameters text string The title text. parent VisualElement The parent of this element. Returns GroupBox GroupBox(VisualElement) Creates a GroupBox with no label. public static GroupBox GroupBox(VisualElement parent = null) Parameters parent VisualElement The parent of this element. Returns GroupBox HelpBox(string, HelpBoxMessageType, VisualElement) Creates a new HelpBox. public static HelpBox HelpBox(string text, HelpBoxMessageType messageType, VisualElement parent = null) Parameters text string The message text. messageType HelpBoxMessageType The type of message. parent VisualElement The parent of this element. Returns HelpBox HelpBox(VisualElement) Creates a new HelpBox. public static HelpBox HelpBox(VisualElement parent = null) Parameters parent VisualElement The parent of this element. Returns HelpBox IMGUIContainer(Action, VisualElement) Constructor. public static IMGUIContainer IMGUIContainer(Action onGUIHandler, VisualElement parent = null) Parameters onGUIHandler Action The function assigned to <see cref=\"onGUIHandler\" />. parent VisualElement The parent of this element. Returns IMGUIContainer IMGUIContainer(VisualElement) Constructor. public static IMGUIContainer IMGUIContainer(VisualElement parent = null) Parameters parent VisualElement The parent of this element. Returns IMGUIContainer Image(VisualElement) Constructor. public static Image Image(VisualElement parent = null) Parameters parent VisualElement The parent of this element. Returns Image Label(string, VisualElement) Constructs a label. public static Label Label(string text, VisualElement parent = null) Parameters text string The text to be displayed. parent VisualElement The parent of this element. Returns Label Label(VisualElement) Constructs a label. public static Label Label(VisualElement parent = null) Parameters parent VisualElement The parent of this element. Returns Label ListView(IList, float, Func<VisualElement>, Action<VisualElement, int>, VisualElement) Constructs a ListView, with all important properties provided. public static ListView ListView(IList itemsSource, float itemHeight, Func<VisualElement> makeItem, Action<VisualElement, int> bindItem, VisualElement parent = null) Parameters itemsSource IList The list of items to use as a data source. itemHeight float The height of each item, in pixels. makeItem Func<VisualElement> The factory method to call to create a display item. The method should return a VisualElement that can be bound to a data item. bindItem Action<VisualElement, int> The method to call to bind a data item to a display item. The method receives as parameters the display item to bind, and the index of the data item to bind it to. parent VisualElement The parent of this element. Returns ListView ListView(VisualElement) Creates a ListView with all default properties. The ListView.itemSource must all be set for the ListView to function properly. public static ListView ListView(VisualElement parent = null) Parameters parent VisualElement The parent of this element. Returns ListView MinMaxSlider(float, float, float, float, VisualElement) Constructor. public static MinMaxSlider MinMaxSlider(float minValue, float maxValue, float minLimit, float maxLimit, VisualElement parent = null) Parameters minValue float The minimum value in the range to be represented. maxValue float The maximum value in the range to be represented. minLimit float The minimum value of the slider limit. maxLimit float The maximum value of the slider limit. parent VisualElement The parent of this element. Returns MinMaxSlider MinMaxSlider(string, float, float, float, float, VisualElement) Constructor. public static MinMaxSlider MinMaxSlider(string label, float minValue, float maxValue, float minLimit, float maxLimit, VisualElement parent = null) Parameters label string minValue float The minimum value in the range to be represented. maxValue float The maximum value in the range to be represented. minLimit float The minimum value of the slider limit. maxLimit float The maximum value of the slider limit. parent VisualElement The parent of this element. Returns MinMaxSlider MinMaxSlider(VisualElement) Constructor. public static MinMaxSlider MinMaxSlider(VisualElement parent = null) Parameters parent VisualElement The parent of this element. Returns MinMaxSlider PopupWindow(VisualElement) Initializes and returns an instance of PopupWindow. public static PopupWindow PopupWindow(VisualElement parent = null) Parameters parent VisualElement The parent of this element. Returns PopupWindow ProgressBar(VisualElement) A control that displays the progress between a lower and upper bound value. public static ProgressBar ProgressBar(VisualElement parent = null) Parameters parent VisualElement The parent of this element. Returns ProgressBar RadioButton(string, VisualElement) Creates a RadioButton with a Label and a default manipulator. public static RadioButton RadioButton(string label, VisualElement parent = null) Parameters label string The Label text. parent VisualElement The parent of this element. Returns RadioButton RadioButton(VisualElement) Creates a RadioButton with no label. public static RadioButton RadioButton(VisualElement parent = null) Parameters parent VisualElement The parent of this element. Returns RadioButton RadioButtonGroup(string, List<string>, VisualElement) Initializes and returns an instance of RadioButtonGroup. public static RadioButtonGroup RadioButtonGroup(string label, List<string> radioButtonChoices, VisualElement parent = null) Parameters label string The label for this group radioButtonChoices List<string> The choices to display in this group parent VisualElement The parent of this element. Returns RadioButtonGroup RadioButtonGroup(VisualElement) Initializes and returns an instance of RadioButtonGroup. public static RadioButtonGroup RadioButtonGroup(VisualElement parent = null) Parameters parent VisualElement The parent of this element. Returns RadioButtonGroup RepeatButton(Action, long, long, VisualElement) Constructor. public static RepeatButton RepeatButton(Action clickEvent, long delay, long interval, VisualElement parent = null) Parameters clickEvent Action The action to execute when the button is pressed. delay long The initial delay before the action is executed for the first time. interval long The interval between each execution of the action. parent VisualElement The parent of this element. Returns RepeatButton RepeatButton(VisualElement) Constructor. public static RepeatButton RepeatButton(VisualElement parent = null) Parameters parent VisualElement The parent of this element. Returns RepeatButton ScrollView(ScrollViewMode, VisualElement) Constructor. public static ScrollView ScrollView(ScrollViewMode scrollViewMode, VisualElement parent = null) Parameters scrollViewMode ScrollViewMode parent VisualElement The parent of this element. Returns ScrollView ScrollView(VisualElement) Constructor. public static ScrollView ScrollView(VisualElement parent = null) Parameters parent VisualElement The parent of this element. Returns ScrollView Scroller(float, float, Action<float>, SliderDirection, VisualElement) Constructor. public static Scroller Scroller(float lowValue, float highValue, Action<float> valueChanged, SliderDirection direction, VisualElement parent = null) Parameters lowValue float highValue float valueChanged Action<float> direction SliderDirection parent VisualElement The parent of this element. Returns Scroller Scroller(VisualElement) Constructor. public static Scroller Scroller(VisualElement parent = null) Parameters parent VisualElement The parent of this element. Returns Scroller Slider(float, float, SliderDirection, float, VisualElement) Constructor. public static Slider Slider(float start, float end, SliderDirection direction, float pageSize, VisualElement parent = null) Parameters start float end float direction SliderDirection pageSize float parent VisualElement The parent of this element. Returns Slider Slider(string, float, float, SliderDirection, float, VisualElement) Constructor. public static Slider Slider(string label, float start, float end, SliderDirection direction, float pageSize, VisualElement parent = null) Parameters label string start float end float direction SliderDirection pageSize float parent VisualElement The parent of this element. Returns Slider Slider(VisualElement) Constructor. public static Slider Slider(VisualElement parent = null) Parameters parent VisualElement The parent of this element. Returns Slider SliderInt(int, int, SliderDirection, float, VisualElement) Constructors for the SliderInt. public static SliderInt SliderInt(int start, int end, SliderDirection direction, float pageSize, VisualElement parent = null) Parameters start int This is the low value of the slider. end int This is the high value of the slider. direction SliderDirection This is the slider direction, horizontal or vertical. pageSize float This is the number of values to change when the slider is clicked. parent VisualElement The parent of this element. Returns SliderInt SliderInt(string, int, int, SliderDirection, float, VisualElement) Constructors for the SliderInt. public static SliderInt SliderInt(string label, int start, int end, SliderDirection direction, float pageSize, VisualElement parent = null) Parameters label string start int This is the low value of the slider. end int This is the high value of the slider. direction SliderDirection This is the slider direction, horizontal or vertical. pageSize float This is the number of values to change when the slider is clicked. parent VisualElement The parent of this element. Returns SliderInt SliderInt(VisualElement) Constructors for the SliderInt. public static SliderInt SliderInt(VisualElement parent = null) Parameters parent VisualElement The parent of this element. Returns SliderInt TextElement(VisualElement) Initializes and returns an instance of TextElement. public static TextElement TextElement(VisualElement parent = null) Parameters parent VisualElement The parent of this element. Returns TextElement TextField(int, bool, bool, char, VisualElement) Creates a new textfield. public static TextField TextField(int maxLength, bool multiline, bool isPasswordField, char maskChar, VisualElement parent = null) Parameters maxLength int The maximum number of characters this textfield can hold. If 0, there is no limit. multiline bool Set this to true to allow multiple lines in the textfield and false if otherwise. isPasswordField bool Set this to true to mask the characters and false if otherwise. maskChar char The character used for masking in a password field. parent VisualElement The parent of this element. Returns TextField TextField(string, int, bool, bool, char, VisualElement) Creates a new textfield. public static TextField TextField(string label, int maxLength, bool multiline, bool isPasswordField, char maskChar, VisualElement parent = null) Parameters label string maxLength int The maximum number of characters this textfield can hold. If 0, there is no limit. multiline bool Set this to true to allow multiple lines in the textfield and false if otherwise. isPasswordField bool Set this to true to mask the characters and false if otherwise. maskChar char The character used for masking in a password field. parent VisualElement The parent of this element. Returns TextField TextField(string, VisualElement) Creates a new textfield. public static TextField TextField(string label, VisualElement parent = null) Parameters label string parent VisualElement The parent of this element. Returns TextField TextField(VisualElement) Creates a new textfield. public static TextField TextField(VisualElement parent = null) Parameters parent VisualElement The parent of this element. Returns TextField Toggle(string, VisualElement) Creates a Toggle with a Label and a default manipulator. public static Toggle Toggle(string label, VisualElement parent = null) Parameters label string The Label text. parent VisualElement The parent of this element. Returns Toggle Toggle(VisualElement) Creates a Toggle with no label. public static Toggle Toggle(VisualElement parent = null) Parameters parent VisualElement The parent of this element. Returns Toggle TwoPaneSplitView(int, float, TwoPaneSplitViewOrientation, VisualElement) A SplitView that contains two resizable panes. One pane is fixed-size while the other pane has flex-grow style set to 1 to take all remaining space. The border between he panes is draggable to resize both panes. Both horizontal and vertical modes are supported. Requires _exactly_ two child elements to operate. public static TwoPaneSplitView TwoPaneSplitView(int fixedPaneIndex, float fixedPaneStartDimension, TwoPaneSplitViewOrientation orientation, VisualElement parent = null) Parameters fixedPaneIndex int fixedPaneStartDimension float orientation TwoPaneSplitViewOrientation parent VisualElement The parent of this element. Returns TwoPaneSplitView TwoPaneSplitView(VisualElement) Parameterized constructor. public static TwoPaneSplitView TwoPaneSplitView(VisualElement parent = null) Parameters parent VisualElement The parent of this element. Returns TwoPaneSplitView"
  },
  "api/SuiSuiShou.UIEEx.html": {
    "href": "api/SuiSuiShou.UIEEx.html",
    "title": "Namespace SuiSuiShou.UIEEx | UIEEx",
    "keywords": "Namespace SuiSuiShou.UIEEx Classes UIEExtension UI Elements extension methods UIELayout"
  },
  "api/index.html": {
    "href": "api/index.html",
    "title": "PLACEHOLDER | UIEEx",
    "keywords": "PLACEHOLDER TODO: Add .NET projects to the src folder and run docfx to generate REAL API Documentation!"
  },
  "articles/elements_factory.html": {
    "href": "articles/elements_factory.html",
    "title": "Elements Factory | UIEEx",
    "keywords": "Elements Factory Principle use UIELayout.[ElementName]([ElementConstructor Parameters], [Parent Elemen(Optional Arguments)]) to create visualelements. If parent parameter is specified,the element will be added to its parentelement automatically. Sample: // Label Element Constructor: // Label label = new Label(\"Content\"); Label label = UIELayout.Label(\"Content\",rootVisualElement); Namespace class UIELayout for elements which inUnityEngine.UIElements class EditorUIELayout for elements whichin UnityEditor.UIElements"
  },
  "articles/installation_instructions.html": {
    "href": "articles/installation_instructions.html",
    "title": "Installation instructions | UIEEx",
    "keywords": "Installation instructions Unity package manager(Git) Go to Package Manager window via Window/Package Manager Click the add button in the status bar Select Add package from git URL from the add menu Fill the git URL with https://github.com/blightue/UIEEx.git and click Add Unity package manager(Local) Download and unzip the source code to your disk Go to Package Manager window via Window/Package Manager Click the add button in the status bar Select Add package from disk from the add menu Select the package.json file in the unzipped folder"
  },
  "articles/method_chaining.html": {
    "href": "articles/method_chaining.html",
    "title": "Method chaining | UIEEx",
    "keywords": "Method chaining Principle UIEEx provide method chaining for elements, you can use Set[Property] to set element property. API Check all supported properties in ElementExtension api documentation. Sample: Button button = UIELayout.Butto(rootVisualElement) .SetBindingPath(\"m_ButtonName\") .SetBindObject(serializedObject);"
  },
  "articles/quick_start.html": {
    "href": "articles/quick_start.html",
    "title": "Quick Start | UIEEx",
    "keywords": "Quick Start Elements Factory use UIELayout.[ElementName]([Element Constructor Parameters], [Parent Element(Optional Arguments)]) to create visual elements. If parent parameter is specified, the element will be added to its parent element automatically. Sample: // Label Element Constructor: // Label label = new Label(\"Content\"); Label label = UIELayout.Label(\"Content\", rootVisualElement); class UIELayout for elements which in UnityEngine.UIElements class EditorUIELayout for elements which in UnityEditor.UIElements Method chaining UIEEx provide method chaining for elements, you can use Set[Property] to set element property. Check all supported properties in ElementExtension api documentation. Sample: Button button = UIELayout.Button(rootVisualElement) .SetBindingPath(\"m_ButtonName\") .SetBindObject(serializedObject); Samples EditorWindow Sample public class UIEExSample : EditorWindow { [SerializeField] private int clickedCount = 0; [MenuItem(\"Tools/UIEEx Sample\")] private static void ShowWindow() { var window = GetWindow<UIEExSample>(); window.Show(); } private void CreateGUI() { Label label = UIELayout.Label(\"Click the btn below\", rootVisualElement); Button btn = UIELayout.Button (() => { clickedCount += 1; label.SetText(\"Button clicked \" + clickedCount + \" times\"); }, rootVisualElement) .SetText(\"Click me\"); } } Custom Editor Sample [CustomEditor(typeof(TestClass))] public class TestClassEditor : UnityEditor.Editor { private TestClass _target; public override VisualElement CreateInspectorGUI() { VisualElement root = new VisualElement(); TextField inputField = UIELayout.TextField(\"My Text\", root) .SetBindingPath(nameof(_target.m_Text)); IntegerField countField = EditorUIELayout.IntegerField(\"My Count\", 100, root) .SetBindingPath(nameof(_target.m_Count)); return root; } }"
  },
  "articles/samples.html": {
    "href": "articles/samples.html",
    "title": "Samples | UIEEx",
    "keywords": "Samples EditorWindow public class UIEExSample : EditorWindow { [SerializeField] private int clickedCount = 0; [MenuItem(\"Tools/UIEEx Sample\")] private static void ShowWindow() { var window = GetWindow<UIEExSample>(); window.Show(); } private void CreateGUI() { Label label = UIELayout.Label(\"Click the btn below\", rootVisualElement); Button btn = UIELayout.Button (() => { clickedCount += 1; label.SetText(\"Button clicked \" + clickedCount + \" times\"); }, rootVisualElement) .SetText(\"Click me\"); } } Custom Editor [CustomEditor(typeof(TestClass))] public class TestClassEditor : UnityEditorEditor { private TestClass _target; public override VisualElement CreateInspectorGUI() { VisualElement root = new VisualElement(); TextField inputField = UIELayout.TextField(\"My Text\", root) .SetBindingPath(nameof(_target.m_Text)); IntegerField countField = EditorUIELayout.IntegerField(\"My Count\", 100, root) .SetBindingPath(nameof(_target.m_Count)); return root; } }"
  },
  "doc_branch_readme.html": {
    "href": "doc_branch_readme.html",
    "title": "Generate Instruction | UIEEx",
    "keywords": "Generate Instruction The docfx branch should be placed in the following position: [unity project root]/Packages/ The package branch (main) should be added to the project as a package. Make sure the package csproj file is in the following position as : [unity project root]/suisuishou.cameraimagecapture.csproj [unity project root]/suisuishou.cameraimagecapture.Editor.csproj this files can be created by open unity editor with the package exist."
  },
  "index.html": {
    "href": "index.html",
    "title": "UIEEx Documentation | UIEEx",
    "keywords": "UIEEx Documentation UIEEx(UIElement Extension) is an extension library of Unity UI Elements package. UIEEx improve the workflow of creating editor & runtime UI with UI Elements. Links Documentation GitHub Get started Reference"
  }
}